{
    "ADC" : {
        "description": "Add with carry",
        "html": "<html><head><link rel='stylesheet' href='arm.css'></head><body><h1>ADC</h1><p>Add with Carry adds two register values and the Carry flag value, and writes the result to the destination register.</p><div><h3>Syntax</h3><div><pre>ADC <em><code>Wd</code></em>, <em><code>Wn</code></em>, <em><code>Wm</code></em> ; 32-bit variant</pre><pre>ADC <em><code>Xd</code></em>, <em><code>Xn</code></em>, <em><code>Xm</code></em> ; 64-bit variant</pre></div><h3>Symbols</h3><div><dl><dt><em><code>Wd</code></em></dt><dd><div><p>Is the 32-bit name of the general-purpose destination register, in the range 0 to 31.</p></div></dd><dt><code>Wn</code></em></dt><dd><div><p>Is the 32-bit name of the first general-purpose source register, in the range 0 to 31.</p></div></dd><dt> <em><code>Wm</code></em></dt><dd><div><p>Is the 32-bit name of the second general-purpose source register, in the range 0 to 31.</p></div></dd><dt><em><code>Xd</code></em></dt><dd><div><p>Is the 64-bit name of the general-purpose destination register, in the range 0 to 31.</p></div></dd><dt><em><code>Xn</code></em></dt><dd><div><p>Is the 64-bit name of the first general-purpose source register, in the range 0 to 31.</p></div></dd><dt><code>Xm</code></em></dt><dd><div><p>Is the 64-bit name of the second general-purpose source register, in the range 0 to 31.</p></div></dd></dl></div><h3>Decode</h3><div><p class='test'>integer d = UInt(Rd);<br/>integer n = UInt(Rn);<br/>integer m = UInt(Rm);<br/>integer datasize = if sf == '1' then 64 else 32;</p></div><h3>Operation</h3><div><p class='test'>bits(datasize) result;<br/>bits(datasize) operand1 = X[n];<br/>bits(datasize) operand2 = X[m];<br/>bits(4) nzcv;<br/>(result, nzcv) = AddWithCarry(operand1, operand2, PSTATE.C);<br/>PSTATE.<N,Z,C,V> = nzcv;<br/>X[d] = result;</p></div></div></body></html>"
    },
    "ADCS" : {
        "description": "Add with carry, setting the condition flags",
        "html": ""
    },
    "B.cond" : {
        "description": "Branch conditionally to a label at a PC-relative offset, with a hint that this is not a subroutine call or return",
        "html": ""
    }
}
